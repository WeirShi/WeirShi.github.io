(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{367:function(t,a,s){"use strict";s.r(a);var e=s(45),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"深拷贝和浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝和浅拷贝"}},[t._v("#")]),t._v(" 深拷贝和浅拷贝")]),t._v(" "),s("h2",{attrs:{id:"什么是浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是浅拷贝"}},[t._v("#")]),t._v(" 什么是浅拷贝")]),t._v(" "),s("p",[t._v("浅拷贝：只是简单的对象引用，并没有真正的从内存中开辟一块空间。")]),t._v(" "),s("h3",{attrs:{id:"浅拷贝方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝方式"}},[t._v("#")]),t._v(" 浅拷贝方式")]),t._v(" "),s("ul",[s("li",[t._v("Object.assign\n"),s("code",[t._v("Object.assign")]),t._v(" 只是拷贝所有的属性值到新的对象中，如果属性值是对象的话，拷贝的是地址，所以并不是深拷贝")]),t._v(" "),s("li",[t._v("ES6中的展开运算符"),s("code",[t._v("...")])])]),t._v(" "),s("h2",{attrs:{id:"什么是深拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是深拷贝"}},[t._v("#")]),t._v(" 什么是深拷贝")]),t._v(" "),s("p",[t._v("深拷贝：是将一个对象从内存中完整的copy一份出来，开辟一个新的区域空间来存放对象")]),t._v(" "),s("h3",{attrs:{id:"深拷贝方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝方式"}},[t._v("#")]),t._v(" 深拷贝方式")]),t._v(" "),s("ul",[s("li",[t._v("使用"),s("code",[t._v("JSON.parse(JSON.stringfy(Object))")]),t._v("\n这种方式简单粗暴，但是对象内存在函数、"),s("code",[t._v("undefined")]),t._v("、"),s("code",[t._v("symbol")]),t._v("时不能使用")]),t._v(" "),s("li",[t._v("自己实现深拷贝函数方法 - 递归实现")]),t._v(" "),s("li",[s("code",[t._v("loadsh._cloneDeep(Object)")]),t._v("方法")])]),t._v(" "),s("h2",{attrs:{id:"在js中数据存储的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在js中数据存储的位置"}},[t._v("#")]),t._v(" 在js中数据存储的位置")]),t._v(" "),s("ul",[s("li",[t._v("原始类型存储的位置为栈储存")]),t._v(" "),s("li",[t._v("引用类型数据：在栈中存放指针，在堆中存放内容")])])])}),[],!1,null,null,null);a.default=_.exports}}]);